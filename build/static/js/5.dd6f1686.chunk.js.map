{"version":3,"sources":["components/Order/Order.js","containers/Orders/Orders.js"],"names":["order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","react_default","a","createElement","style","textTransform","display","margin","border","padding","key","className","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","Order_Order","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"sLA2BeA,UAzBF,SAACC,GACd,IAAMC,EAAa,GACnB,IAAK,IAAIC,KAAkBF,EAAMC,YAC7BA,EAAYE,KAAK,CAACC,KAAKF,EACnBG,OAAOL,EAAMC,YAAYC,KAEjC,IAAMI,EAAkBL,EAAYM,IAAI,SAAAC,GACpC,OAAOC,EAAAC,EAAAC,cAAA,QACPC,MAAO,CAACC,cAAc,aACrBC,QAAQ,eACRC,OAAO,QACPC,OAAO,iBACPC,QAAQ,OAETC,IAAKV,EAAGJ,MAAOI,EAAGJ,KAPX,KAOmBI,EAAGH,OAPtB,OAUP,OACJI,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,SACfV,EAAAC,EAAAC,cAAA,yBAAiBL,GACjBG,EAAAC,EAAAC,cAAA,kBAASF,EAAAC,EAAAC,cAAA,mBAAWS,OAAOC,WAAWrB,EAAMsB,OAAOC,QAAQ,wCCfrDC,8LAGNC,KAAKzB,MAAM0B,cAAcD,KAAKzB,MAAM2B,MAAMF,KAAKzB,MAAM4B,yCAIjD,IAAIC,EAAQpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,MAWZ,OAVEL,KAAKzB,MAAM+B,UACXF,EAASJ,KAAKzB,MAAM6B,OAAOtB,IAAI,SAAAR,GAAK,OAC9BU,EAAAC,EAAAC,cAACqB,EAAD,CAAOd,IAAKnB,EAAMkC,GAClBhC,YAAaF,EAAME,YACnBqB,MAAOvB,EAAMuB,WAOjBb,EAAAC,EAAAC,cAAA,WACPkB,UApBoBK,aAyCNC,sBAfS,SAAAC,GACpB,MAAM,CACFP,OAAOO,EAAMrC,MAAM8B,OACnBE,QAAQK,EAAMrC,MAAMgC,QAAQA,QAC5BJ,MAAOS,EAAMC,KAAKV,MAClBC,OAAOQ,EAAMC,KAAKT,SAIC,SAAAU,GACvB,MAAO,CACHZ,cAAc,SAACC,EAAMC,GAAP,OAAiBU,EAASC,IAAoBZ,EAAMC,OAI3DO,CAA6CK,YAAiBhB,EAAOiB","file":"static/js/5.dd6f1686.chunk.js","sourcesContent":["import React from 'react';\nimport './Order.css'\nconst order =(props)=>{\nconst ingredients =[];\nfor (let ingredientName in props.ingredients){\n    ingredients.push({name:ingredientName,\n        amount:props.ingredients[ingredientName]});\n}\nconst ingredientOutput =ingredients.map(ig =>{\n    return <span \n    style={{textTransform:'capitalize',\n     display:'inline-block',\n     margin:'0 8px',\n     border:'1px solid #ccc',\n     padding:'5px'\n}}\n    key={ig.name}>{ig.name} ({ig.amount})</span>\n})\n\n    return(\n<div className=\"Order\">\n<p>Ingredients: {ingredientOutput}</p>\n<p>Price:<strong>R {Number.parseFloat(props.price).toFixed(2)}</strong></p>\n</div>\n    );\n\n};\nexport default order","import React , {Component} from 'react';\nimport {connect} from 'react-redux';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner'\nclass Orders extends Component {\n\n    componentDidMount(){\nthis.props.onFetchOrders(this.props.token,this.props.userId);\n    }\n\nrender(){\n    let orders =<Spinner />;\n  if(!this.props.loading){\n      orders = this.props.orders.map(order=>(\n            <Order key={order.id}\n            ingredients={order.ingredients}\n            price={order.price}\n            />\n        ))\n      \n  }\n\n    return(\n        <div>\n{orders}\n        </div>\n\n    );\n}\n}\nconst mapStateToprops = state =>{\n    return{\n        orders:state.order.orders,\n        loading:state.order.loading.loading,\n        token: state.auth.token,\n        userId:state.auth.userId\n    }\n}\n\nconst mapDispatchToProps = dispatch =>{\n    return {\n        onFetchOrders:(token,userId)=> dispatch(actions.fetchOrders(token,userId))\n    }\n}\n\nexport default connect(mapStateToprops,mapDispatchToProps) (withErrorHandler(Orders,axios));"],"sourceRoot":""}